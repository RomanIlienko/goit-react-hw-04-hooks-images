{"version":3,"sources":["components/Error/Error.module.css","components/Modal/Modal.module.css","components/Button/Button.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","components/ImageGallery/ImageGallery.module.css","components/Loader/Loader.module.css","components/Searchbar/Searchbar.module.css","components/Modal/Modal.js","components/Searchbar/Searchbar.js","components/Button/Button.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Loader/Loader.js","components/Error/error.jpg","components/Error/Error.js","services/PixaBayView.js","App.js","index.js"],"names":["module","exports","modalRoot","document","querySelector","Modal","onClose","children","useEffect","window","addEventListener","handleKeyDown","handleBackdropClick","removeEventListener","e","code","target","currentTarget","createPortal","className","s","Overlay","onClick","Searchbar","onSubmit","useState","query","setQuery","SearchForm","preventDefault","trim","alert","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","value","onChange","toLowerCase","autoFocus","placeholder","Button","loadMore","Wrapper","ImageGalleryItem","image","webformatURL","id","tags","largeImageURL","src","alt","ImageGalleryItemImage","ImageGallery","images","map","MyLoader","FallbackContainer","color","height","width","timeout","Component","Error","textError","role","wrapper","errorImage","img","text","textContent","API_KEY","BASE_URL","App","setImages","currentPage","setCurrentPage","searchQuery","setSearchQuery","isLoading","setIsLoading","error","setError","largeImage","setLargeImg","showModal","setShowModal","setTags","axios","get","then","response","data","hits","catch","console","log","fetchPagesList","prevState","finally","scrollTo","top","documentElement","scrollHeight","behavior","toggleModal","shouldRenderLoadMoreButton","length","ocClick","event","dataset","url","state","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.efb943e8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Error_wrapper__20yG5\",\"textContent\":\"Error_textContent__343rw\",\"img\":\"Error_img__32cpT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__3PHHS\",\"Modal\":\"Modal_Modal__2ihil\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1HP2D\",\"Wrapper\":\"Button_Wrapper__1SzF4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__Iob76\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__3CjPI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__1YUl1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FallbackContainer\":\"Loader_FallbackContainer__2Qmxu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__1ea55\",\"SearchForm\":\"Searchbar_SearchForm__s2Tq6\",\"SearchFormButton\":\"Searchbar_SearchFormButton__15vyH\",\"SearchForm-button\":\"Searchbar_SearchForm-button__1tp-c\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__qgMCP\",\"SearchFormInput\":\"Searchbar_SearchFormInput__1Q43j\"};","import { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport s from './Modal.module.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nconst Modal = ({ onClose, children}) => {\r\n    useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown)\r\n        window.addEventListener('click', handleBackdropClick)\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown)\r\n            window.removeEventListener('click', handleBackdropClick)\r\n        }\r\n    })\r\n\r\n    const handleKeyDown = e => {\r\n        if (e.code === 'Escape') {\r\n            onClose();\r\n        }\r\n    }\r\n\r\n    const handleBackdropClick = e => {\r\n        if (e.target === e.currentTarget) {\r\n            onClose();\r\n        }\r\n    }\r\n    \r\n    return (\r\n        createPortal(\r\n            <div className={s.Overlay} onClick={handleBackdropClick}>\r\n                <div className={s.Modal}>{children}</div>\r\n            </div>,\r\n            modalRoot,\r\n        )\r\n    )\r\n}\r\n\r\nModal.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    largeImgUrl: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Modal\r\n\r\n// export default class Modals extends React.Component {\r\n//     static propTypes = {\r\n//         onClose: PropTypes.func.isRequired,\r\n//         largeImgUrl: PropTypes.string.isRequired,\r\n//     }\r\n\r\n//     componentDidMount() {\r\n//         window.addEventListener('keydown', this.handleKeyDown)\r\n//     }\r\n\r\n//     componentWillUnmount() {\r\n//         window.removeEventListener('keydown', this.handleKeyDown)\r\n//     }\r\n\r\n//     handleKeyDown = e => {\r\n//         if (e.code === 'Escape') {\r\n//             this.props.onClose();\r\n//         }\r\n//     }\r\n\r\n//     handleBackdropClick = e => {\r\n//         if (e.target === e.currentTarget) {\r\n//             this.props.onClose();\r\n//         }\r\n//     }\r\n\r\n//     render() {\r\n//         const { largeImgUrl } = this.props;\r\n\r\n//         return createPortal(\r\n//             <div className={s.Overlay} onClick={this.handleBackdropClick}>\r\n//                 <div className={s.Modal}>\r\n//                     <img src={largeImgUrl} alt='Gallery item' />\r\n//                 </div>\r\n//             </div>,\r\n//             modalRoot,\r\n//         );\r\n//     }\r\n// }","import { useState } from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\nimport s from './Searchbar.module.css'\r\n\r\nconst Searchbar = ({ onSubmit }) => {\r\n    const [query, setQuery] = useState('')\r\n    \r\n    const handleChange = e => {\r\n        setQuery(e.currentTarget.value.toLowerCase())\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (query.trim() === '') {\r\n            alert('Please enter a valid name')\r\n            return;\r\n        }\r\n\r\n        onSubmit(query);\r\n        setQuery('')\r\n    }\r\n    \r\n    return (\r\n        <header className={s.Searchbar}>\r\n            <form className={s.SearchForm} onSubmit={handleSubmit}>\r\n                <button type=\"submit\" className={s.SearchFormButton}>\r\n                    <span className={s.SearchFormButtonLabel}></span>\r\n                </button>\r\n\r\n                <input\r\n                 className={s.SearchFormInput}\r\n                 type=\"text\"\r\n                 autoComplete=\"off\"\r\n                 value={query}\r\n                 onChange={handleChange}\r\n                 autoFocus\r\n                 placeholder=\"Search images and photos\"\r\n                />\r\n            </form>\r\n         </header>\r\n    )\r\n}\r\n\r\nSearchbar.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Searchbar\r\n\r\n\r\n// export default class Searchbar extends React.Component {\r\n//     state = {\r\n//         query: ''\r\n//     };\r\n\r\n//     static propTypes = {\r\n//     onSubmit: PropTypes.func.isRequired,\r\n//     };\r\n\r\n//     handleChange = e => {\r\n//         this.setState({ query: e.currentTarget.value.toLowerCase() })\r\n//     };\r\n\r\n//     handleSubmit = e => {\r\n//         e.preventDefault();\r\n\r\n//         if (this.state.query.trim() === '') {\r\n//             alert('Please enter a valid name')\r\n//             return;\r\n//         }\r\n\r\n//         this.props.onSubmit(this.state.query);\r\n//         this.setState({ query: ''})\r\n//     }\r\n\r\n//     render() {\r\n//         return (\r\n//          <header className={s.Searchbar}>\r\n//             <form className={s.SearchForm} onSubmit={this.handleSubmit}>\r\n//                 <button type=\"submit\" className={s.SearchFormButton}>\r\n//                     <span className={s.SearchFormButtonLabel}></span>\r\n//                 </button>\r\n\r\n//                 <input\r\n//                  className={s.SearchFormInput}\r\n//                  type=\"text\"\r\n//                  autoComplete=\"off\"\r\n//                  value={this.state.query}\r\n//                  onChange={this.handleChange}\r\n//                  autoFocus\r\n//                  placeholder=\"Search images and photos\"\r\n//                 />\r\n//             </form>\r\n//          </header>\r\n//         )\r\n//     }\r\n// }","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport s from './Button.module.css'\r\n\r\nconst Button = ({ loadMore }) => {\r\n  return (\r\n    <div className={s.Wrapper}>\r\n     <button type=\"button\" className={s.Button} onClick={loadMore}>\r\n      Load more\r\n     </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  loadMore: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;","import React from 'react'\r\nimport s from './ImageGalleryItem.module.css'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst ImageGalleryItem = ({ image, onClick }) => {\r\n  const { webformatURL, id, tags, largeImageURL } = image;\r\n\r\n  return (\r\n    <li className={s.ImageGalleryItem} key={id}>\r\n      <img\r\n        src={webformatURL}\r\n        alt={tags}\r\n        className={s.ImageGalleryItemImage}\r\n        data-url={largeImageURL}\r\n        onClick={onClick}\r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  image: PropTypes.shape({\r\n    webformatURL: PropTypes.string.isRequired,\r\n    tags: PropTypes.string.isRequired,\r\n    id: PropTypes.number.isRequired,\r\n  }).isRequired\r\n};\r\n\r\nexport default ImageGalleryItem;","import React from 'react'\r\nimport s from './ImageGallery.module.css'\r\nimport PropTypes from 'prop-types';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem'\r\n\r\nconst ImageGallery = ({ images, onClick }) => {\r\n  return (\r\n    <ul className={s.ImageGallery}>\r\n      {images.map(image => (\r\n        <ImageGalleryItem key={image.id} image={image} onClick={onClick}/>\r\n      ))}\r\n    </ul>\r\n  )\r\n};\r\n\r\nImageGallery.propTypes = {\r\n   images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default ImageGallery;\r\n","import Loader from 'react-loader-spinner'\r\nimport React, { Component } from 'react'\r\nimport s from './Loader.module.css';\r\n\r\nexport default class MyLoader extends Component {\r\n     render() {\r\n        return (\r\n            <Loader\r\n             className={s.FallbackContainer}\r\n             type=\"Puff\"\r\n             color=\"#00BFFF\"\r\n             height={100}\r\n             width={100}\r\n             timeout={3000}\r\n            />\r\n        );\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/error.81aee21f.jpg\";","import PropTypes from \"prop-types\";\r\nimport errorImage from '../Error/error.jpg'\r\nimport s from \"./Error.module.css\";\r\n\r\nfunction Error({ textError }) {\r\n  return (\r\n    <div role=\"alert\" className={s.wrapper}>\r\n      <img src={errorImage} className={s.img} width=\"550\" alt=\"no_res\" />\r\n      <p text={textError} className={s.textContent}>\r\n        {textError}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nError.propTypes = {\r\n  textError: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Error;","import axios from \"axios\";\r\n\r\nconst API_KEY = '23479864-16575353206961163feee44f8';\r\nconst BASE_URL = 'https://pixabay.com/api/';\r\nconst PERPAGE = 12;\r\n\r\nfunction fetchPagesList( searchQuery = '', currentPage = 1) {\r\n  return axios\r\n    .get(\r\n      `${BASE_URL}?q=${searchQuery}&page=${currentPage}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=${PERPAGE}`,\r\n    )\r\n    .then(response => response.data.hits)\r\n    .catch(error => console.log(error));\r\n  \r\n}\r\nexport { fetchPagesList };\r\n","import { useState, useEffect } from 'react';\n\nimport Modal from 'components/Modal';\nimport Searchbar from 'components/Searchbar';\nimport Button from 'components/Button';\nimport ImageGallery from 'components/ImageGallery'\nimport MyLoader from 'components/Loader/Loader';\nimport Error from 'components/Error/Error';\n\nimport { fetchPagesList } from 'services/PixaBayView';\n\n\n\nconst App = () => {\n  const [images, setImages] = useState([])\n  const [currentPage, setCurrentPage] = useState(1)\n  const [searchQuery, setSearchQuery] = useState('')\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState(null)\n  const [largeImage, setLargeImg] = useState('')\n  const [showModal, setShowModal] = useState(false)\n  const [tags, setTags] = useState('');\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return\n    }\n\n    function fetchPages() {\n      setIsLoading(true);\n      \n      fetchPagesList(searchQuery, currentPage)\n        .then(images => {\n          setImages(prevState => [...prevState, ...images]);\n        })\n        .catch(error => setError(\"Something went wrong. Try again.\"))\n        .finally(() => {\n          setIsLoading(false)\n\n          window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: \"smooth\",\n          });\n        });\n    };\n    fetchPages()\n  }, [searchQuery, currentPage])\n\n  const onChangeQuery = query => {\n    setSearchQuery(query)\n    setCurrentPage(1)\n    setImages([])\n    setError(null)\n    setLargeImg('')\n  };\n  \n  const bigImage = event => {\n    setLargeImg(event.target.dataset.url);\n    setTags(event.target.alt);\n\n    toggleModal();\n  };\n\n  const toggleModal = () => {\n    setShowModal(!showModal)\n  }\n\n  const buttonClickOnMore = () => {\n    setCurrentPage((state) => state + 1);\n  };\n\n  const shouldRenderLoadMoreButton = images.length > 0 && !isLoading;\n\n  return (\n    <>\n      <Searchbar onSubmit={onChangeQuery} />\n\n      {error && <Error textError={error} />}\n\n      {images.length > 0 && !error && (\n        <ImageGallery\n              images={images}\n          ocClick={bigImage} />\n      )}\n        \n      {isLoading && <MyLoader />}\n\n      {shouldRenderLoadMoreButton && <Button loadMore={buttonClickOnMore} />}\n        \n      {showModal &&\n        <Modal onClose={toggleModal}>\n         <img src={largeImage} alt={tags} />\n        </Modal>\n      }\n    </>\n  )\n}\n\nexport default App\n\n\n// class App extends React.Component {\n//   state = {\n//     hits: [],\n//     currentPage: 1,\n//     searchQuery: '',\n//     isLoading: false,\n//     error: null,\n//     selectedImg: '',\n\n//   };\n\n//   componentDidUpdate(prevProps, prevState) {\n//     if (prevState.searchQuery !== this.state.searchQuery) {\n//       this.fetchPages()\n//     }\n//    }\n\n//   onChangeQuery = query => {\n//     this.setState({\n//       searchQuery: query,\n//       currentPage: 1,\n//       hits: [],\n//       error: null,\n//       selectedImg: '',\n//       showModal: false,\n//     });\n//   };\n  \n//   fetchPages = () => {\n//     const { currentPage, searchQuery } = this.state;\n\n//     const options = {\n//       searchQuery,\n//       currentPage,\n//     };\n\n//     this.setState({ isLoading: true });\n\n//     fetchPagesList(options)\n//       .then(hits => {\n//         this.setState(prevState => ({\n//           hits: [...prevState.hits, ...hits],\n//           currentPage: prevState.currentPage + 1,\n//         }));\n//       })\n//       .catch(error => this.setState({ error: \"Something went wrong. Try again.\" }))\n//       .finally(() => {\n//         this.setState({ isLoading: false });\n\n//         window.scrollTo({\n//           top: document.documentElement.scrollHeight,\n//           behavior: \"smooth\",\n//         });\n//       });\n//   };\n  \n//   setLargeImg = image => {\n//     this.setState({ selectedImg: image.largeImageURL });\n//     this.toggleModal();\n//   };\n\n//   toggleModal = () => {\n//     this.setState(({ showModal }) => ({\n//       showModal: !showModal\n//     }))\n//   }\n\n//   render() {\n//     const { hits, isLoading, error, showModal, selectedImg } = this.state;\n//     const shouldRenderLoadMoreButton = hits.length > 0 && !isLoading;\n    \n//     return (\n//       <>\n//         <Searchbar onSubmit={this.onChangeQuery} />\n\n//           { error && <Error textError={error} />}\n\n//         {hits.length > 0 && !error && \n//           <ImageGallery>\n//           {hits.map(hit => (\n//             <ImageGalleryItem\n//               key={hit.id}\n//               hit={hit}\n//               setLargeImg={this.setLargeImg}\n//             />\n//           ))}\n//         </ImageGallery>\n//         }\n        \n//         {isLoading && <MyLoader />}\n\n//         {shouldRenderLoadMoreButton && <Button loadMore={this.fetchPages} />}\n        \n//         {showModal && <Modal largeImgUrl={selectedImg} onClose={this.toggleModal} />}\n//       </>\n//     )\n//    }\n// }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}